# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
def my_func():
    a = int(input('Введите первое число: '))
    b = int(input('Введите второе число: '))
    try:
        print(a/b)
    except ZeroDivisionError:
        print("WARNING: Invalid Equation")


my_func()

# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.

# def user_info(name='Not stated', surname='Not stated', birth_year='Not stated',
#               location='Not stated', email='Not stated', phone_number='Not stated'):
#     return print(f'Name: {name}\n Surname: {surname}\n Birth Year: {birth_year} \n '
#                  f'City: {location} \n Email: {email} \n Phone number: {phone_number}')
#
# user_info(name='Nat', email='rjfo@mn.ru')

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.

# def my_func(arg1, arg2, arg3):
#     a, b, c = arg1, arg2, arg3
#     d = min(a,b,c)
#     if a > d and b > d:
#         result = a + d
#     elif b > d and c > d:
#         result = b + c
#     elif c > d and a > d:
#         result = c + a
#     return result
#
# print(my_func(10,2,3))



# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y.
# Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.
# def my_func(x,y):
#     return x ** y
#
# print(my_func(2, -3))
#
# def my_func_dif(x, y):
#     a = abs(y)
#     b = x
#     for i in range(a):
#         b = b * x
#     return 1 / b
#
# print(my_func(2,-3))

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел,
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.


# def my_func():
#     result = 0
#     end = False
#     while end == False:
#         a_list = input('Введите числа через пробел. Для выхода введите ! : ').split(' ')
#         a = 0
#
#         for i in range(len(a_list)):
#             if a_list[i] == '!':
#                 end = True
#                 break
#             else:
#                 a += int(a_list[i])
#         result += a
#     print(f'Сумма введнных чисел {result}')
#
# my_func()

# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием.
# В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().

# def int_func(text):
#     return text.capitalize()
#
# print(int_func('gable'))